function cov_1v2ksrmztz(){var path="/Users/robertpringle/Documents/GitHub/Individual-Project/src/backend/routes/password.js";var hash="dd0e62f303d99aba6f6b7355b02136655f840ad0";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/Users/robertpringle/Documents/GitHub/Individual-Project/src/backend/routes/password.js",statementMap:{"0":{start:{line:2,column:16},end:{line:2,column:34}},"1":{start:{line:3,column:19},end:{line:3,column:40}},"2":{start:{line:4,column:15},end:{line:4,column:32}},"3":{start:{line:5,column:15},end:{line:5,column:34}},"4":{start:{line:6,column:24},end:{line:6,column:64}},"5":{start:{line:7,column:18},end:{line:7,column:42}},"6":{start:{line:9,column:14},end:{line:9,column:31}},"7":{start:{line:10,column:13},end:{line:10,column:33}},"8":{start:{line:12,column:22},end:{line:18,column:2}},"9":{start:{line:20,column:15},end:{line:20,column:31}},"10":{start:{line:22,column:0},end:{line:50,column:6}},"11":{start:{line:23,column:22},end:{line:23,column:30}},"12":{start:{line:25,column:17},end:{line:25,column:51}},"13":{start:{line:27,column:4},end:{line:30,column:5}},"14":{start:{line:28,column:6},end:{line:28,column:59}},"15":{start:{line:29,column:6},end:{line:29,column:13}},"16":{start:{line:33,column:19},end:{line:33,column:41}},"17":{start:{line:34,column:18},end:{line:34,column:40}},"18":{start:{line:37,column:4},end:{line:37,column:116}},"19":{start:{line:40,column:17},end:{line:45,column:7}},"20":{start:{line:47,column:4},end:{line:47,column:39}},"21":{start:{line:49,column:4},end:{line:49,column:130}},"22":{start:{line:52,column:2},end:{line:77,column:6}},"23":{start:{line:53,column:17},end:{line:53,column:108}},"24":{start:{line:54,column:4},end:{line:57,column:5}},"25":{start:{line:55,column:6},end:{line:55,column:59}},"26":{start:{line:56,column:6},end:{line:56,column:13}},"27":{start:{line:60,column:4},end:{line:63,column:5}},"28":{start:{line:61,column:6},end:{line:61,column:68}},"29":{start:{line:62,column:6},end:{line:62,column:13}},"30":{start:{line:66,column:17},end:{line:66,column:45}},"31":{start:{line:67,column:25},end:{line:67,column:71}},"32":{start:{line:69,column:4},end:{line:69,column:33}},"33":{start:{line:70,column:4},end:{line:70,column:32}},"34":{start:{line:71,column:4},end:{line:71,column:35}},"35":{start:{line:72,column:4},end:{line:72,column:22}},"36":{start:{line:76,column:4},end:{line:76,column:58}},"37":{start:{line:79,column:2},end:{line:79,column:26}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:22,column:48},end:{line:22,column:49}},loc:{start:{line:22,column:74},end:{line:50,column:3}},line:22},"1":{name:"(anonymous_1)",decl:{start:{line:52,column:49},end:{line:52,column:50}},loc:{start:{line:52,column:75},end:{line:77,column:3}},line:52}},branchMap:{"0":{loc:{start:{line:27,column:4},end:{line:30,column:5}},type:"if",locations:[{start:{line:27,column:4},end:{line:30,column:5}},{start:{line:27,column:4},end:{line:30,column:5}}],line:27},"1":{loc:{start:{line:44,column:102},end:{line:44,column:126}},type:"binary-expr",locations:[{start:{line:44,column:102},end:{line:44,column:118}},{start:{line:44,column:122},end:{line:44,column:126}}],line:44},"2":{loc:{start:{line:54,column:4},end:{line:57,column:5}},type:"if",locations:[{start:{line:54,column:4},end:{line:57,column:5}},{start:{line:54,column:4},end:{line:57,column:5}}],line:54},"3":{loc:{start:{line:60,column:4},end:{line:63,column:5}},type:"if",locations:[{start:{line:60,column:4},end:{line:63,column:5}},{start:{line:60,column:4},end:{line:63,column:5}}],line:60}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},f:{"0":0,"1":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"dd0e62f303d99aba6f6b7355b02136655f840ad0"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1v2ksrmztz=function(){return actualCoverage;};}return actualCoverage;}cov_1v2ksrmztz();const express=(cov_1v2ksrmztz().s[0]++,require('express'));const nodemailer=(cov_1v2ksrmztz().s[1]++,require('nodemailer'));const crypto=(cov_1v2ksrmztz().s[2]++,require('crypto'));const bcrypt=(cov_1v2ksrmztz().s[3]++,require("bcryptjs"));const asyncMiddleware=(cov_1v2ksrmztz().s[4]++,require('../middleware/asyncMiddleware'));const UserModel=(cov_1v2ksrmztz().s[5]++,require('../model/user'));const email=(cov_1v2ksrmztz().s[6]++,process.env.EMAIL);const pass=(cov_1v2ksrmztz().s[7]++,process.env.PASSWORD);const smtpTransport=(cov_1v2ksrmztz().s[8]++,nodemailer.createTransport({service:'Gmail',auth:{user:'exploremmog@gmail.com',pass:'RiCkRoLlEd2020'}}));const router=(cov_1v2ksrmztz().s[9]++,express.Router());cov_1v2ksrmztz().s[10]++;router.post('/forgot-password',asyncMiddleware(async(req,res,next)=>{cov_1v2ksrmztz().f[0]++;const{email}=(cov_1v2ksrmztz().s[11]++,req.body);const user=(cov_1v2ksrmztz().s[12]++,await UserModel.findOne({email}));cov_1v2ksrmztz().s[13]++;if(!user){cov_1v2ksrmztz().b[0][0]++;cov_1v2ksrmztz().s[14]++;res.status(400).json({'message':'invalid email'});cov_1v2ksrmztz().s[15]++;return;}else{cov_1v2ksrmztz().b[0][1]++;}// create user token
const buffer=(cov_1v2ksrmztz().s[16]++,crypto.randomBytes(20));const token=(cov_1v2ksrmztz().s[17]++,buffer.toString('hex'));// update user reset password token and exp
cov_1v2ksrmztz().s[18]++;await UserModel.findByIdAndUpdate({_id:user._id},{resetToken:token,resetTokenExp:Date.now()+600000});// send user password reset email
const data=(cov_1v2ksrmztz().s[19]++,{to:user.email,from:email,subject:'Explore MMO Password Reset',text:"You username is: "+user.username+". Reset you password using "+`${process.env.URL}${(cov_1v2ksrmztz().b[1][0]++,process.env.PORT)||(cov_1v2ksrmztz().b[1][1]++,3020)}/reset-password.html?token=${token}`});cov_1v2ksrmztz().s[20]++;await smtpTransport.sendMail(data);cov_1v2ksrmztz().s[21]++;res.status(200).json({message:'A password reset link has been sent to your email and will only be valid for 10 minutes!'});}));cov_1v2ksrmztz().s[22]++;router.post('/reset-password',asyncMiddleware(async(req,res,next)=>{cov_1v2ksrmztz().f[1]++;const user=(cov_1v2ksrmztz().s[23]++,await UserModel.findOne({resetToken:req.body.token,resetTokenExp:{$gt:Date.now()}}));cov_1v2ksrmztz().s[24]++;if(!user){cov_1v2ksrmztz().b[2][0]++;cov_1v2ksrmztz().s[25]++;res.status(400).json({'message':'invalid token'});cov_1v2ksrmztz().s[26]++;return;}else{cov_1v2ksrmztz().b[2][1]++;}// ensure provided password matches verified password
cov_1v2ksrmztz().s[27]++;if(req.body.password!==req.body.verifiedPassword){cov_1v2ksrmztz().b[3][0]++;cov_1v2ksrmztz().s[28]++;res.status(400).json({'message':'passwords do not match'});cov_1v2ksrmztz().s[29]++;return;}else{cov_1v2ksrmztz().b[3][1]++;}// update user model
const salt=(cov_1v2ksrmztz().s[30]++,await bcrypt.genSaltSync(10));const hashPassword=(cov_1v2ksrmztz().s[31]++,await bcrypt.hashSync(req.body.password,salt));cov_1v2ksrmztz().s[32]++;user.password=hashPassword;cov_1v2ksrmztz().s[33]++;user.resetToken=undefined;cov_1v2ksrmztz().s[34]++;user.resetTokenExp=undefined;cov_1v2ksrmztz().s[35]++;await user.save();cov_1v2ksrmztz().s[36]++;res.status(200).json({message:'password updated'});}));cov_1v2ksrmztz().s[37]++;module.exports=router;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,